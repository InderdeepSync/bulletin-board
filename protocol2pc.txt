MASTER:
    PRECOMMIT
    ABORT

    COMMIT

    SUCCESS_NOOP
    UNSUCCESS_UNDO

SLAVE:
    READY

    COMMIT_SUCCESS
    COMMIT_UNSUCCESS -> goes to idle


Possible Flows:


1. [DONE]
    i (a). Connection is refused by one or more peers; may be due to either a network partition or simply that the node is down.
    OR
    i (b). Connection to all Peers is successful but one or more peers takes too much time to respond to PRECOMMIT by READY [Simulate by adding sleep(3)]
    ii. Timeout occurs on Master; sends ABORT to remaining peers who did acknowledge READY.

NOTE: There is no scenario where the slave peer consciously responds NOT_READY.
      If it is able to receive incoming connection from the master, it is assumed to be READY for whatever else may come.

2. [DONE]
    i. All Peers acknowledge READY. Master sends COMMIT message with command to perform.
    ii (a). One or more peers takes too much time to respond to COMMIT.
    OR
    ii (b). One or more peers responds with COMMIT_UNSUCCESS.
    iii. Master does not perform operation itself and sends UNSUCCESS_UNDO to those peers that responded with COMMIT_SUCCESS.

3. [DONE]
    i. All Peers acknowledge READY. Master sends COMMIT message with command to perform.
    ii. All peers respond with COMMIT_SUCCESS.
    iii. Master fails to perform operation successfully and sends UNSUCCESS_UNDO to all peers.

4. [DONE]
    i. All Peers acknowledge READY. Master sends COMMIT message with command to perform.
    ii. All peers respond with COMMIT_SUCCESS.
    iii. Master performs operation successfully and sends SUCCESS_NOOP to all peers.

5.
    i. It takes too long for master to send either ABORT or COMMIT message to peer after receiving READY acknowledgement.
       Peer assumes something is wrong, times out and closes connection.
    ii. What happens to master then??

6.
    i. It takes too long for master to send either SUCCESS_NOOP or UNSUCCESS_UNDO message to peer after receiving COMMIT_SUCCESS acknowledgement.
       Peer times out, assumes something is wrong, undoes operation, releases lock and closes connection. [sleep(3) after sendMessage(COMMIT)]
    ii. What happens to master then??